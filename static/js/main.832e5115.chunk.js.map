{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Spinner/Spinner.module.css","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","components/Spinner/Spinner.jsx","components/services/apiService.js","App.js","index.js","components/Searchbar/SearchBar.module.css"],"names":["module","exports","SearchBar","state","searchQuery","handleChange","event","setState","target","value","toLowerCase","handleSubmit","preventDefault","props","onSubmit","resetState","this","className","s","Searchbar","SearchForm","type","SearchForm_button","SearchForm_button_label","SearchForm_input","autocomplete","autofocus","placeholder","onChange","Component","ImageGalleryItem","modalContent","id","onItemClick","webformatURL","src","alt","ImageGalleryItem_image","onClick","ImageGallery","handleOpenModal","e","currentTarget","images","map","image","modalRoot","document","querySelector","Modal","handleKeyDown","code","console","log","onClose","handleBackdropClick","window","addEventListener","removeEventListener","createPortal","Overlay","Button","onPress","name","defaultProps","Spinner","color","height","width","timeout","fetchImages","page","fetchUrl","fetch","then","res","json","App","isLoading","showModal","toggleModal","toggleLoading","handleNextPage","prevState","hadleChangeQuery","query","handleScroll","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","modalContentSet","itemId","element","find","largeImageURL","getData","hits","catch","error","message","finally","prevProps","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.832e5115.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1GJPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3ws8a\",\"Modal\":\"Modal_Modal__3ESjz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__J4BAr\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__2hwOd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__rXboo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__3pG7M\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./SearchBar.module.css\";\r\n\r\n class SearchBar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    searchQuery: \"\",\r\n  };\r\n  handleChange = (event) => {\r\n    this.setState({ searchQuery: event.target.value.toLowerCase() });\r\n  };\r\n  \r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.searchQuery);\r\n    this.resetState();\r\n  };\r\n  \r\n  resetState = () => {\r\n    this.setState({ value: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { searchQuery } = this.state;\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={s.SearchForm_button}>\r\n            <span className={s.SearchForm_button_label}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={s.SearchForm_input}\r\n            type=\"text\"\r\n            autocomplete=\"off\"\r\n            autofocus\r\n            placeholder=\"Search images and photos\"\r\n            value={searchQuery}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n\r\n\r\n","\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./ImageGalleryItem.module.css\";\r\n\r\nclass ImageGalleryItem extends Component {\r\n  static propTypes = {\r\n    onItemClick: PropTypes.func.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    webformatURL: PropTypes.string.isRequired,\r\n  };\r\n\r\n  modalContent = (id) => {\r\n    this.props.onItemClick(id);\r\n  };\r\n  render() {\r\n    const { id, webformatURL } = this.props;\r\n    return (\r\n      <img\r\n        src={webformatURL}\r\n        alt=\"\"\r\n        className={s.ImageGalleryItem_image}\r\n        onClick={() => this.modalContent(id)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ImageGallery.module.css\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\n\r\nclass ImageGallery extends Component {\r\nstatic propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    onItemClick: PropTypes.func.isRequired,\r\n    images: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n      })\r\n    ).isRequired,\r\n    };\r\n    \r\n     handleOpenModal = (e) => {\r\n    if (e.target !== e.currentTarget) {\r\n      this.props.onClick();\r\n    }\r\n  };\r\n\r\n    render() {\r\n         const { images, onItemClick } = this.props;\r\n        return (\r\n           <ul className={s.ImageGallery} onClick={this.handleOpenModal}>\r\n        {images &&\r\n          images.map((image) => (\r\n            <li key={image.id} className={s.ImageGalleryItem}>\r\n              <ImageGalleryItem {...image} onItemClick={onItemClick} />\r\n             </li>\r\n          ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nexport default ImageGallery;","import React, { Component } from 'react';\r\nimport { createPortal } from \"react-dom\"; //это метод для модалки\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Modal.module.css\";\r\n\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    image: PropTypes.objectOf(PropTypes.string).isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log('Modal componentDidMount');\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  //метод очистки слушателей, HTTP-запросов и т д\r\n  componentWillUnmount() {\r\n        console.log('Modal componentWillUnmount');\r\n       window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      console.log('Нажали ESC, нужно закрыть модалку');\r\n\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n   handleBackdropClick= event => {\r\n    // console.log('Кликнули в оверлей');\r\n\r\n    // console.log('currentTarget: ', event.currentTarget);\r\n    // console.log('target: ', event.target);\r\n\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    const { image } = this.props;\r\n    \r\n      return createPortal(\r\n        <div className={s.Overlay} onClick={this.handleBackdropClick}>\r\n            <div className={s.Modal}>\r\n              <img src={image} alt=\"\" />\r\n            </div>\r\n       </div>,\r\n          modalRoot\r\n    );\r\n  }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./Button.module.css\";\r\n\r\nclass Button extends Component {\r\n  static defaultProps = {\r\n    name: \"Load more\",\r\n  };\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    onPress: PropTypes.func.isRequired,\r\n  };\r\n  render() {\r\n    const { onPress, name } = this.props;\r\n    return (\r\n      <button type=\"button\" onClick={onPress} className={s.Button}>\r\n        {name}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nimport s from './Spinner.module.css';\r\n\r\nclass Spinner extends Component {\r\n  render() {\r\n    return (\r\n      <div className={s.Spinner}>\r\n       <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={0}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default Spinner;\r\n","const api = '16865907-bf97a2667d97724c7c41d2d46';\nconst url = 'https://pixabay.com/api/?';\n\nconst fetchImages = (searchQuery, page) => {\n  const fetchUrl = `${url}q=${searchQuery}&page=${page}&key=${api}&image_type=photo&orientation=horizontal&per_page=12`;\n  return fetch(fetchUrl).then(res => res.json());\n};\n\nexport default fetchImages;\n","import React, { Component } from 'react';\nimport SearchBar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Modal from './components/Modal';\nimport Button from './components/Button/Button';\nimport Spinner from './components/Spinner/Spinner';\nimport './App.css';\n\nimport fetchImages from './components/services/apiService';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n    page: 1,\n    images: [],\n    modalContent: '',\n    isLoading: false,\n    showModal: false,\n  };\n\n  // componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componentDidUpdate');\n    const { searchQuery, page } = this.state;\n\n    if (prevState.searchQuery !== searchQuery || prevState.page !== page) {\n      this.getData();\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(state => ({\n      showModal: !state.showModal,\n    }));\n  };\n  // toggleModal = () => {\n  //   this.setState(({ showModal }) => ({\n  //     showModal: !showModal,\n  //   }));\n  // };\n\n  toggleLoading = () => {\n    this.setState(({ isLoading }) => ({ isLoading: !isLoading }));\n  };\n\n  handleNextPage = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n  };\n\n  hadleChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      images: [],\n    });\n  };\n\n  handleScroll = () => {\n    setTimeout(() => {\n      window.scrollBy({\n        top: document.documentElement.clientHeight - 160,\n        behavior: 'smooth',\n      });\n    }, 800);\n  };\n\n  modalContentSet = itemId => {\n    const { images } = this.state;\n    const element = images.find(({ id }) => id === itemId);\n    this.setState({ modalContent: element.largeImageURL });\n  };\n\n  getData = () => {\n    const { searchQuery, page } = this.state;\n    this.toggleLoading();\n    fetchImages(searchQuery, page)\n      .then(({ hits }) => {\n        this.setState(({ images }) => {\n          return { images: [...images, ...hits] };\n        });\n      })\n      .then(this.handleScroll)\n      .catch(error => console.log(error.message))\n      .finally(this.toggleLoading);\n  };\n\n  render() {\n    // console.log('App render');\n    const { showModal, images, modalContent, isLoading } = this.state;\n\n    return (\n      <div className=\"App\">\n        <SearchBar onSubmit={this.hadleChangeQuery} />\n\n        {images.length > 0 && (\n          <ImageGallery\n            images={images}\n            onClick={this.toggleModal}\n            onItemClick={this.modalContentSet}\n          />\n        )}\n\n        {showModal && <Modal image={modalContent} onClose={this.toggleModal} />}\n\n        {isLoading && <Spinner />}\n\n        {!isLoading && images.length >= 12 && (\n          <Button name=\"Load more\" onPress={this.handleNextPage} />\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__3PB4D\",\"SearchForm\":\"SearchBar_SearchForm__sZrDe\",\"SearchForm_button\":\"SearchBar_SearchForm_button__f_tai\",\"SearchForm_button_label\":\"SearchBar_SearchForm_button_label__33Xn1\",\"SearchForm_input\":\"SearchBar_SearchForm_input__1KoBW\"};"],"sourceRoot":""}