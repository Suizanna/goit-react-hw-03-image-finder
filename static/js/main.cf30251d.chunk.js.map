{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Spinner/Spinner.module.css","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","components/Spinner/Spinner.jsx","components/services/apiService.js","App.js","index.js","components/Searchbar/SearchBar.module.css"],"names":["module","exports","SearchBar","state","searchQuery","handleChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","this","className","s","Searchbar","SearchForm","type","SearchForm_button","SearchForm_button_label","SearchForm_input","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","modalContent","id","onItemClick","webformatURL","src","alt","ImageGalleryItem_image","onClick","ImageGallery","handleOpenModal","e","target","images","onLoad","scrollList","map","image","modalRoot","document","querySelector","Modal","handleKeyDown","code","console","log","onClose","handleBackdropClick","window","addEventListener","removeEventListener","createPortal","Overlay","Button","onPress","name","defaultProps","Spinner","color","height","width","timeout","api","fetchImages","page","fetchUrl","fetch","then","response","ok","json","Promise","reject","Error","App","status","showModal","renderImages","a","apiService","prevState","hits","catch","hadleChangeQuery","toggleModal","modalContentSet","itemId","element","find","largeImageURL","onLoadMore","handleScroll","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","pending","resolved","length","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf30251d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1GJPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3ws8a\",\"Modal\":\"Modal_Modal__3ESjz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__J4BAr\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__2hwOd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__rXboo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__3pG7M\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./SearchBar.module.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n class SearchBar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n//локальный state. храним пока набираем инпут\r\n  state = {\r\n    searchQuery: \"\",\r\n   };\r\n   \r\n  handleChange = (event) => {\r\n    this.setState({ searchQuery: event.currentTarget.value.toLowerCase() });\r\n   };\r\n  \r\n  //когда отправляем запрос по Submit. очистка формы. не отправляем пустую сторку\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n//нет рендера картинок при пробеле если trim\r\n    if (this.state.searchQuery.trim() === '') { \r\n     return toast.error(\"Enter search query\");\r\n    }\r\n\r\n    this.props.onSubmit(this.state.searchQuery);\r\n    //очиста формы сразу после Submit \r\n    this.setState({ searchQuery: \"\" });\r\n    \r\n  };\r\n\r\n  render() {\r\n    const { searchQuery } = this.state;\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={s.SearchForm_button}>\r\n            <span className={s.SearchForm_button_label}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={s.SearchForm_input}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={searchQuery}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n\r\n\r\n","\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./ImageGalleryItem.module.css\";\r\n\r\nclass ImageGalleryItem extends Component {\r\n  static propTypes = {\r\n    onItemClick: PropTypes.func.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    webformatURL: PropTypes.string.isRequired,\r\n  };\r\n\r\n  modalContent = (id) => {\r\n    this.props.onItemClick(id);\r\n  };\r\n  render() {\r\n    const { id, webformatURL } = this.props;\r\n    return (\r\n      <img\r\n        src={webformatURL}\r\n        alt=\"\"\r\n        className={s.ImageGalleryItem_image}\r\n        onClick={() => this.modalContent(id)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nclass ImageGallery extends Component {\r\n  static propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    onItemClick: PropTypes.func.isRequired,\r\n    images: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n      }),\r\n    ).isRequired,\r\n  };\r\n  handleOpenModal = e => {\r\n    if (e.target !== e.currentTarget) {\r\n      this.props.onClick();\r\n    }\r\n  };\r\n  render() {\r\n    const { images, onItemClick } = this.props;\r\n    return (\r\n      <ul\r\n        onLoad={() => {\r\n          this.props.scrollList();\r\n        }}\r\n        className={s.ImageGallery}\r\n        onClick={this.handleOpenModal}\r\n      >\r\n        {images &&\r\n          images.map(image => (\r\n            <li key={image.id} className={s.ImageGalleryItem}>\r\n              <ImageGalleryItem {...image} onItemClick={onItemClick} />\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nexport default ImageGallery;","import React, { Component } from 'react';\r\nimport { createPortal } from \"react-dom\"; //это метод для модалки\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Modal.module.css\";\r\n\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    image: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log('Modal componentDidMount');\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  //метод очистки слушателей, таймеры, HTTP-запросов и т д\r\n  componentWillUnmount() {\r\n       console.log('Modal componentWillUnmount');\r\n       window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      console.log('Нажали ESC, нужно закрыть модалку');\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n   handleBackdropClick= event => {\r\n    // console.log('Кликнули в оверлей');\r\n\r\n    // console.log('currentTarget: ', event.currentTarget);\r\n    // console.log('target: ', event.target);\r\n\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    const { image } = this.props;\r\n    \r\n      return createPortal(\r\n        <div className={s.Overlay} onClick={this.handleBackdropClick}>\r\n            <div className={s.Modal}>\r\n              <img src={image} alt=\"\" />\r\n            </div>\r\n       </div>,\r\n          modalRoot\r\n    );\r\n  }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./Button.module.css\";\r\n\r\nclass Button extends Component {\r\n  static defaultProps = {\r\n    name: \"Load more\",\r\n  };\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    onPress: PropTypes.func.isRequired,\r\n  };\r\n  render() {\r\n    const { onPress, name } = this.props;\r\n    return (\r\n      <button type=\"button\" onClick={onPress} className={s.Button}>\r\n        {name}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nimport s from './Spinner.module.css';\r\n\r\nclass Spinner extends Component {\r\n  render() {\r\n    return (\r\n      <div className={s.Spinner}>\r\n       <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={0}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default Spinner;\r\n","const API_KEY = '16865907-bf97a2667d97724c7c41d2d46';\nconst BASE_URL = 'https://pixabay.com/api/?';\n\n// const fetchImages = (searchQuery, page) => {\n//   const fetchUrl = `${url}q=${searchQuery}&page=${page}&key=${api}&image_type=photo&orientation=horizontal&per_page=12`;\n//   return fetch(fetchUrl).then(res => res.json());\n// };\n\nfunction fetchImages(searchQuery, page) {\n  const fetchUrl = `${BASE_URL}q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  return fetch(fetchUrl).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(new Error('No response from server'));\n  });\n}\n\nconst api = { fetchImages };\n\nexport default api;\n\n// export default fetchImages;\n","import React, { Component } from 'react';\nimport SearchBar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Modal from './components/Modal';\nimport Button from './components/Button/Button';\nimport Spinner from './components/Spinner/Spinner';\nimport { ToastContainer } from 'react-toastify';\nimport './App.css';\nimport apiService from './components/services/apiService';\n\n// const Status = {   //у Репеты react-21-22 урок 6\n//   IDLE: 'idle',\n//   PENDING: 'pending',\n//   RESOLVED: 'resolved',\n//   REJECTED: 'rejected',\n// };\nclass App extends Component {\n  state = {\n    searchQuery: '',\n    error: null,\n    status: 'idle',\n    page: 1,\n    images: [],\n    modalContent: '',\n    showModal: false,\n  };\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery, page } = this.state;\n    if (prevState.searchQuery !== searchQuery || prevState.page !== page) {\n      this.setState({ status: 'pending' });\n      this.renderImages();\n    }\n  }\n  renderImages = async () => {\n    const { searchQuery, page } = this.state;\n    return apiService\n      .fetchImages(searchQuery, page)\n      .then(response => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...response.hits],\n          status: 'resolved',\n        }));\n      })\n      .catch(error => this.setState({ error }));\n  };\n  //при onSubmit на <SearchBar/>\n  // очищаем стеит и записываем новый searchQuery который ввели\n  hadleChangeQuery = searchQuery => {\n    if (this.state.searchQuery === searchQuery) {\n      return;\n    } else {\n      this.setState({\n        // searchQuery: query, //this.setState({ searchQuery }) не нужен\n        searchQuery: '',\n        page: 1,\n        images: [],\n      });\n    }\n    this.setState({ searchQuery }); //и тогда не нужен\n  };\n  toggleModal = () => {\n    this.setState(state => ({\n      showModal: !state.showModal,\n    }));\n  };\n  modalContentSet = itemId => {\n    const { images } = this.state;\n    const element = images.find(({ id }) => id === itemId);\n    this.setState({ modalContent: element.largeImageURL });\n  };\n  //кнопка загрузить еще\n  onLoadMore = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n  };\n  handleScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n  render() {\n    // console.log('App render');\n    const { showModal, images, modalContent, status } = this.state;\n    const pending = status === 'pending';\n    const resolved = status === 'resolved';\n    return (\n      <div className=\"App\">\n        <SearchBar onSubmit={this.hadleChangeQuery} />\n        {images.length > 0 && (\n          <ImageGallery\n            scrollList={this.handleScroll}\n            images={images}\n            onClick={this.toggleModal}\n            onItemClick={this.modalContentSet}\n          />\n        )}\n        {showModal && <Modal image={modalContent} onClose={this.toggleModal} />}\n        {pending && <Spinner />}\n        {resolved && images.length >= 12 && (\n          <Button name=\"Load more\" onPress={this.onLoadMore} />\n        )}\n        <ToastContainer autoClose={3000} />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__3PB4D\",\"SearchForm\":\"SearchBar_SearchForm__sZrDe\",\"SearchForm_button\":\"SearchBar_SearchForm_button__f_tai\",\"SearchForm_button_label\":\"SearchBar_SearchForm_button_label__33Xn1\",\"SearchForm_input\":\"SearchBar_SearchForm_input__1KoBW\"};"],"sourceRoot":""}